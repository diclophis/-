# TODO

bardin.haus
  * re-deploy all demos and documents
  * remesh kangaroo nodes to ec2 instance
  * site redesign, photography centric

risingcode.com
  * full stack rebuild
  * deploy into kube

detective-agency
  * fix thread module
  * implement remote terminal
  * implement more DSL

attalos
  * drop XMPP backend
  * rebuild using ActionCable interface
    * https://github.com/libuv/libuv
    * https://github.com/cotag/spider-gazelle
    * https://www.npmjs.com/package/actioncable
    * https://github.com/palkan/litecable
  * MVP product features

cmdseqd
  * benchmark scala/akka websocket vs. ruby/ActionCable
  * MVP product features

copynews
  * make nntp mesh work
  * deploy into kube / use as some sort of messaging queue as backend
  * libnntp cross compile via webassembly/emscripten
  * peer to peer browser based nntp mesh

tiddly.js
  * create react framework
  * mvp tiddlywiki
  * ruby backend
  * re-deploy

bikeshed
  * nw.js installer
  * phantom/casper/selenium bridge
  * image compare paralell

gigamock
  * functional api
  * what was gigamock???
  * forum?

presenting.js
  * reconsider project plan?
  * progressivly enhanced react isomorphic presentation framework

get-user-media-input
  * gif import!! !!!!
  * better UI

debug-tile-texturer
  * make it so you can export sprite data to qwqz,kit1zx

ekko
  * make all the animations by extracting from source art
  * make the dolphin move, this is the player ui for kitzx ECS game!
  * figure out how to program sprite movement: https://www.youtube.com/watch?v=lSbLrWRLWl4

autocenter
  * ROI extraction
  * gif creation
  * file saving

glsl-qwqz-1.0
  * port 
  * point shader
  * document how spine animations should work
  * 2d player model for run+jump+fly
  * fix shader vertex generation
  * interface with JS more
  * android ios cleanup and performance

happy-trails-5
  * gamelogic with scoring
  * support non-square images
  * redeploy

image-mine
  * make a site by scraping OS imagery

centerology-4.0 / picture-haus
  * open-source
  * travis build (take from Age-Of-Discovery)
  * error log rotation
  * make jruby/neo4r/ruby-2.0 work together...?
    * maybe switch to ruby-2 with a neo4j server on torquebox?
    * maybe just use jruby-1.9 on torquebox
    * maybe just foreman
  * drop elasticsearch backend
  * switch to lire/lucene backend
  * build serverless pipeline?
    * scala?/mix-mode?
  * reconsider UI flow to optimize for user input

Age Of Discovery
  * upgrade rails/all gems everything!!!
  * some sort of working demo!!!!
  * intro art and background fiction copy finish instruction document
  * shuffle wording on instruction to read better for new gameplay elements
  * Upgrade to rails-4, re-integrate with centerology-4.0
    * fix problems with neo4j on rails4 + jruby
  * blockchain based economy / transaction system?
  * interface some sort of 
  * re-deploy into kube

emscripten
  * push back stuff

MemoryLeak
  * fix webaudio, firefox supports webaudio
  * render sub-tiles into larger tile
  * render to texture
  * TileMap sprite location logic
    * needs seperate octree for render
  * Maze location based

lyteride-1.0
  * occulus-rift framework
  * rectangle for bike
  * drop rectangles for line behind
  * constant forward velocity
  * left or right

PixelThings
  * update xcode project
  * integration with kicksaas

risingcode-fss
  * moving text?

ctr
  * upgrade threejs
  * add game logic
  * render perf improvements

ingressfd
  * prototype functional mruby based ssl http server

logrepd
  * better runtime options
  * install fluentd/postgres into bardin.haus kube cluster
  * live deployment to bardin.haus

marvin
  * working prototype of redis/resque worker plugin
  * benchmark against other redis/resque plugins

versioning-file-cabinet
  * deploy to kube
  * README and marketing docs
  * exmaple usage of bikeshed

syncretizer
  * determine viability of project
  * more example scenarios matching real-world deploy cases
  * bridge with wkndr as shebang translator for executable 

super-happy-voxeltime-2d
  * deploy prototype to kube
  * use a simple visualization of data in a voxel space from alternative backend dbs

sidecar
  * test kube 1.8 / openvpn clusterability
  * re-mesh with m41nfrnn and ec2 instance 

shell3
  * finalize experiment research and documents
  * opensource
  * procfile auto-runner? ... combine with other projects?
  * working osx build

ruby-libuv-lab
  * publish benchmarks

# https://www.commonwl.org/user_guide/03-input/index.html


msgpack / grpc




kit1zx 3d html emscripten mruby game

wkndr ruby process conventional




# define per pipeline / per step what command / what container image ... use CMD???? Dockerfile convention....

# github repo

# webdav for quick hot-reloading of stuff as need-be

# circle ci planner to cwl

# faas step functions aws visual editor

# git repo local priv

# git push / pull

# start blank code pen

# uses kubernetes primitives
# rbac ...
# namespaces
# run vs job vs deployment vs cron vs... controller/operator/custom

# stdin/stdout all process have this

# simple orchestration messages ... what existing standard?????? ... exit code is primary
# https://www.commonwl.org/
# two way coms
# pipeline oriented features like progress indication and status messages

# compelling UI
# overview
# what tasks are available to run
# ETA estimates
# create pipeline from _public_ github repo, what branch???, ssh key???, get key from deployment??? or public github integration!?!!??!?! app market place
# ????....... mesh of public clusters??
# auto-detect from buildpack conventions

# takes github repo... builds kaniko ... conventional Dockerfile primary ... one Dockerfile per repo...... customizable????

# can power my photography pipeline... 

# it can power mavencraft

# bookmarks site ... build wkndr --reload dev pipeline ... telepresence etc


kit1zx browser to server per player ECS mesh network

display()/tick() split

multi view

kubernetes manamgenet / overviewer

# arkanoidish / tron game

# machine learning pipeline??????????

# https://github.com/rabix/composer

# skaffold
# draft
# tilt

# kubeadm-reset in wkndr

# camera-one

# kuberntes thing with per branch bits some sort of dev local thing recipe something
# kafka on kubernetes

kit1zx websocket server process (in a pod with limited network egress and all types of other restrictions)
  system-popens() chroot'd vim-static
  installs fwatch for chroot and dispatches call to mruby parse *rb

  messages from the client are sent back to the server

  onrecv in server they are dispatched via distributed ECS style queue scribble log

  there is an api to query the scribble log

the chroot dir 


stdin stdout pipeline bits cwl worflow circle ci planner

nc one-endpoint | nc onother-endpoint as a tunnelling mechanism, tls key share.... hmmmmm GRPC????? other bits, just tls priv/pub client/server keypair yes?

some sort of ability share geometry between nodes???? or purely infomration only? graphql only api?

edge compute proxy function as a service endpoint visualizer graph node editor compiz 

image resize middleware s3 object content database edge node cache lru expiration

